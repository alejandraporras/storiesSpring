/*
 * Created on 14 Apr 2015 ( Time 18:45:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.stories.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.stories.bean.Comment;
import org.stories.bean.jpa.CommentEntity;
import org.stories.bean.jpa.UsertableEntity;
import org.stories.bean.jpa.SubmissionEntity;
import org.stories.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class CommentServiceMapperTest {

	private CommentServiceMapper commentServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		commentServiceMapper = new CommentServiceMapper();
		commentServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'CommentEntity' to 'Comment'
	 * @param commentEntity
	 */
	@Test
	public void testMapCommentEntityToComment() {
		// Given
		CommentEntity commentEntity = new CommentEntity();
		commentEntity.setText(mockValues.nextString(50));
		commentEntity.setTime(mockValues.nextDate());
		commentEntity.setUsertable(new UsertableEntity());
		commentEntity.getUsertable().setId(mockValues.nextString(20));
		commentEntity.setSubmission(new SubmissionEntity());
		commentEntity.getSubmission().setId(mockValues.nextInteger());
		
		// When
		Comment comment = commentServiceMapper.mapCommentEntityToComment(commentEntity);
		
		// Then
		assertEquals(commentEntity.getText(), comment.getText());
		assertEquals(commentEntity.getTime(), comment.getTime());
		assertEquals(commentEntity.getUsertable().getId(), comment.getBy());
		assertEquals(commentEntity.getSubmission().getId(), comment.getParent());
	}
	
	/**
	 * Test : Mapping from 'Comment' to 'CommentEntity'
	 */
	@Test
	public void testMapCommentToCommentEntity() {
		// Given
		Comment comment = new Comment();
		comment.setText(mockValues.nextString(50));
		comment.setTime(mockValues.nextDate());
		comment.setBy(mockValues.nextString(20));
		comment.setParent(mockValues.nextInteger());

		CommentEntity commentEntity = new CommentEntity();
		
		// When
		commentServiceMapper.mapCommentToCommentEntity(comment, commentEntity);
		
		// Then
		assertEquals(comment.getText(), commentEntity.getText());
		assertEquals(comment.getTime(), commentEntity.getTime());
		assertEquals(comment.getBy(), commentEntity.getUsertable().getId());
		assertEquals(comment.getParent(), commentEntity.getSubmission().getId());
	}

}
/*
 * Created on 14 Apr 2015 ( Time 18:45:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.stories.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.stories.bean.Submission;
import org.stories.bean.jpa.SubmissionEntity;
import org.stories.bean.jpa.UsertableEntity;
import org.stories.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class SubmissionServiceMapperTest {

	private SubmissionServiceMapper submissionServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		submissionServiceMapper = new SubmissionServiceMapper();
		submissionServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'SubmissionEntity' to 'Submission'
	 * @param submissionEntity
	 */
	@Test
	public void testMapSubmissionEntityToSubmission() {
		// Given
		SubmissionEntity submissionEntity = new SubmissionEntity();
		submissionEntity.setDescendants(mockValues.nextInteger());
		submissionEntity.setScores(mockValues.nextInteger());
		submissionEntity.setTime(mockValues.nextDate());
		submissionEntity.setTitle(mockValues.nextString(20));
		submissionEntity.setType(mockValues.nextString(20));
		submissionEntity.setUrl(mockValues.nextString(20));
		submissionEntity.setUsertable(new UsertableEntity());
		submissionEntity.getUsertable().setId(mockValues.nextString(20));
		
		// When
		Submission submission = submissionServiceMapper.mapSubmissionEntityToSubmission(submissionEntity);
		
		// Then
		assertEquals(submissionEntity.getDescendants(), submission.getDescendants());
		assertEquals(submissionEntity.getScores(), submission.getScores());
		assertEquals(submissionEntity.getTime(), submission.getTime());
		assertEquals(submissionEntity.getTitle(), submission.getTitle());
		assertEquals(submissionEntity.getType(), submission.getType());
		assertEquals(submissionEntity.getUrl(), submission.getUrl());
		assertEquals(submissionEntity.getUsertable().getId(), submission.getBy());
	}
	
	/**
	 * Test : Mapping from 'Submission' to 'SubmissionEntity'
	 */
	@Test
	public void testMapSubmissionToSubmissionEntity() {
		// Given
		Submission submission = new Submission();
		submission.setDescendants(mockValues.nextInteger());
		submission.setScores(mockValues.nextInteger());
		submission.setTime(mockValues.nextDate());
		submission.setTitle(mockValues.nextString(20));
		submission.setType(mockValues.nextString(20));
		submission.setUrl(mockValues.nextString(20));
		submission.setBy(mockValues.nextString(20));

		SubmissionEntity submissionEntity = new SubmissionEntity();
		
		// When
		submissionServiceMapper.mapSubmissionToSubmissionEntity(submission, submissionEntity);
		
		// Then
		assertEquals(submission.getDescendants(), submissionEntity.getDescendants());
		assertEquals(submission.getScores(), submissionEntity.getScores());
		assertEquals(submission.getTime(), submissionEntity.getTime());
		assertEquals(submission.getTitle(), submissionEntity.getTitle());
		assertEquals(submission.getType(), submissionEntity.getType());
		assertEquals(submission.getUrl(), submissionEntity.getUrl());
		assertEquals(submission.getBy(), submissionEntity.getUsertable().getId());
	}

}
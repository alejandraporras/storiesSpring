/*
 * Created on 14 Apr 2015 ( Time 18:41:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.stories.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.stories.bean.Usertable;
import org.stories.business.service.UsertableService;
import org.stories.web.listitem.UsertableListItem;

/**
 * Spring MVC controller for 'Usertable' management.
 */
@Controller
public class UsertableRestController {

	@Resource
	private UsertableService usertableService;
	
	@RequestMapping( value="/items/usertable",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UsertableListItem> findAllAsListItems() {
		List<Usertable> list = usertableService.findAll();
		List<UsertableListItem> items = new LinkedList<UsertableListItem>();
		for ( Usertable usertable : list ) {
			items.add(new UsertableListItem( usertable ) );
		}
		return items;
	}
	
	@RequestMapping( value="/usertable",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Usertable> findAll() {
		return usertableService.findAll();
	}

	@RequestMapping( value="/usertable/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Usertable findOne(@PathVariable("id") String id) {
		return usertableService.findById(id);
	}
	
	@RequestMapping( value="/usertable",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Usertable create(@RequestBody Usertable usertable) {
		return usertableService.create(usertable);
	}

	@RequestMapping( value="/usertable/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Usertable update(@PathVariable("id") String id, @RequestBody Usertable usertable) {
		return usertableService.update(usertable);
	}

	@RequestMapping( value="/usertable/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") String id) {
		usertableService.delete(id);
	}
	
}

/*
 * Created on 14 Apr 2015 ( Time 18:41:17 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.stories.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.stories.bean.Submission;
import org.stories.business.service.SubmissionService;
import org.stories.web.listitem.SubmissionListItem;

/**
 * Spring MVC controller for 'Submission' management.
 */
@Controller
public class SubmissionRestController {

	@Resource
	private SubmissionService submissionService;
	
	@RequestMapping( value="/items/submission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<SubmissionListItem> findAllAsListItems() {
		List<Submission> list = submissionService.findAll();
		List<SubmissionListItem> items = new LinkedList<SubmissionListItem>();
		for ( Submission submission : list ) {
			items.add(new SubmissionListItem( submission ) );
		}
		return items;
	}
	
	@RequestMapping( value="/submission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Submission> findAll() {
		return submissionService.findAll();
	}

	@RequestMapping( value="/submission/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Submission findOne(@PathVariable("id") Integer id) {
		return submissionService.findById(id);
	}
	
	@RequestMapping( value="/submission",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Submission create(@RequestBody Submission submission) {
		return submissionService.create(submission);
	}

	@RequestMapping( value="/submission/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Submission update(@PathVariable("id") Integer id, @RequestBody Submission submission) {
		return submissionService.update(submission);
	}

	@RequestMapping( value="/submission/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		submissionService.delete(id);
	}
	
}

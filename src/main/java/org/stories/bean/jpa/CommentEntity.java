/*
 * Created on 14 Apr 2015 ( Time 18:46:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.stories.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "comment"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="comment", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CommentEntity.countAll", query="SELECT COUNT(x) FROM CommentEntity x" )
} )
public class CommentEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="text", length=50)
    private String     text         ;

    @Temporal(TemporalType.DATE)
    @Column(name="time")
    private Date       time         ;

	// "by" (column "by") is not defined by itself because used as FK in a link 
	// "parent" (column "parent") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="by", referencedColumnName="id")
    private UsertableEntity usertable   ;

    @ManyToOne
    @JoinColumn(name="parent", referencedColumnName="id")
    private SubmissionEntity submission  ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CommentEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : text ( varchar ) 
    public void setText( String text ) {
        this.text = text;
    }
    public String getText() {
        return this.text;
    }

    //--- DATABASE MAPPING : time ( date ) 
    public void setTime( Date time ) {
        this.time = time;
    }
    public Date getTime() {
        return this.time;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUsertable( UsertableEntity usertable ) {
        this.usertable = usertable;
    }
    public UsertableEntity getUsertable() {
        return this.usertable;
    }

    public void setSubmission( SubmissionEntity submission ) {
        this.submission = submission;
    }
    public SubmissionEntity getSubmission() {
        return this.submission;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(text);
        sb.append("|");
        sb.append(time);
        return sb.toString(); 
    } 

}

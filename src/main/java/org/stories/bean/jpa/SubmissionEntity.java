/*
 * Created on 14 Apr 2015 ( Time 18:46:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.stories.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "submission"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="submission", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="SubmissionEntity.countAll", query="SELECT COUNT(x) FROM SubmissionEntity x" )
} )
public class SubmissionEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="descendants")
    private Integer    descendants  ;

    @Column(name="scores")
    private Integer    scores       ;

    @Temporal(TemporalType.DATE)
    @Column(name="time")
    private Date       time         ;

    @Column(name="title", length=20)
    private String     title        ;

    @Column(name="type", length=20)
    private String     type         ;

    @Column(name="url", length=20)
    private String     url          ;

	// "by" (column "by") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="submission", targetEntity=CommentEntity.class)
    private List<CommentEntity> listOfComment;

    @ManyToOne
    @JoinColumn(name="by", referencedColumnName="id")
    private UsertableEntity usertable   ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public SubmissionEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : descendants ( int4 ) 
    public void setDescendants( Integer descendants ) {
        this.descendants = descendants;
    }
    public Integer getDescendants() {
        return this.descendants;
    }

    //--- DATABASE MAPPING : scores ( int4 ) 
    public void setScores( Integer scores ) {
        this.scores = scores;
    }
    public Integer getScores() {
        return this.scores;
    }

    //--- DATABASE MAPPING : time ( date ) 
    public void setTime( Date time ) {
        this.time = time;
    }
    public Date getTime() {
        return this.time;
    }

    //--- DATABASE MAPPING : title ( varchar ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : type ( varchar ) 
    public void setType( String type ) {
        this.type = type;
    }
    public String getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : url ( varchar ) 
    public void setUrl( String url ) {
        this.url = url;
    }
    public String getUrl() {
        return this.url;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfComment( List<CommentEntity> listOfComment ) {
        this.listOfComment = listOfComment;
    }
    public List<CommentEntity> getListOfComment() {
        return this.listOfComment;
    }

    public void setUsertable( UsertableEntity usertable ) {
        this.usertable = usertable;
    }
    public UsertableEntity getUsertable() {
        return this.usertable;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(descendants);
        sb.append("|");
        sb.append(scores);
        sb.append("|");
        sb.append(time);
        sb.append("|");
        sb.append(title);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(url);
        return sb.toString(); 
    } 

}

/*
 * Created on 14 Apr 2015 ( Time 18:46:08 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.stories.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "usertable"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="usertable", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UsertableEntity.countAll", query="SELECT COUNT(x) FROM UsertableEntity x" )
} )
public class UsertableEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false, length=20)
    private String     id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="delay")
    private Integer    delay        ;

    @Column(name="created")
    private Integer    created      ;

    @Column(name="karma")
    private Integer    karma        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="usertable", targetEntity=CommentEntity.class)
    private List<CommentEntity> listOfComment;

    @OneToMany(mappedBy="usertable", targetEntity=SubmissionEntity.class)
    private List<SubmissionEntity> listOfSubmission;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UsertableEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( String id ) {
        this.id = id ;
    }
    public String getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : delay ( int4 ) 
    public void setDelay( Integer delay ) {
        this.delay = delay;
    }
    public Integer getDelay() {
        return this.delay;
    }

    //--- DATABASE MAPPING : created ( int4 ) 
    public void setCreated( Integer created ) {
        this.created = created;
    }
    public Integer getCreated() {
        return this.created;
    }

    //--- DATABASE MAPPING : karma ( int4 ) 
    public void setKarma( Integer karma ) {
        this.karma = karma;
    }
    public Integer getKarma() {
        return this.karma;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfComment( List<CommentEntity> listOfComment ) {
        this.listOfComment = listOfComment;
    }
    public List<CommentEntity> getListOfComment() {
        return this.listOfComment;
    }

    public void setListOfSubmission( List<SubmissionEntity> listOfSubmission ) {
        this.listOfSubmission = listOfSubmission;
    }
    public List<SubmissionEntity> getListOfSubmission() {
        return this.listOfSubmission;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(delay);
        sb.append("|");
        sb.append(created);
        sb.append("|");
        sb.append(karma);
        return sb.toString(); 
    } 

}

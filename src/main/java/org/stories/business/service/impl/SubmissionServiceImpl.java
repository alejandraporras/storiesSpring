/*
 * Created on 14 Apr 2015 ( Time 18:45:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.stories.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.stories.bean.Submission;
import org.stories.bean.jpa.SubmissionEntity;
import java.util.Date;
import java.util.List;
import org.stories.business.service.SubmissionService;
import org.stories.business.service.mapping.SubmissionServiceMapper;
import org.stories.data.repository.jpa.SubmissionJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of SubmissionService
 */
@Component
@Transactional
public class SubmissionServiceImpl implements SubmissionService {

	@Resource
	private SubmissionJpaRepository submissionJpaRepository;

	@Resource
	private SubmissionServiceMapper submissionServiceMapper;
	
	@Override
	public Submission findById(Integer id) {
		SubmissionEntity submissionEntity = submissionJpaRepository.findOne(id);
		return submissionServiceMapper.mapSubmissionEntityToSubmission(submissionEntity);
	}

	@Override
	public List<Submission> findAll() {
		Iterable<SubmissionEntity> entities = submissionJpaRepository.findAll();
		List<Submission> beans = new ArrayList<Submission>();
		for(SubmissionEntity submissionEntity : entities) {
			beans.add(submissionServiceMapper.mapSubmissionEntityToSubmission(submissionEntity));
		}
		return beans;
	}

	@Override
	public Submission save(Submission submission) {
		return update(submission) ;
	}

	@Override
	public Submission create(Submission submission) {
		SubmissionEntity submissionEntity = submissionJpaRepository.findOne(submission.getId());
		if( submissionEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		submissionEntity = new SubmissionEntity();
		submissionServiceMapper.mapSubmissionToSubmissionEntity(submission, submissionEntity);
		SubmissionEntity submissionEntitySaved = submissionJpaRepository.save(submissionEntity);
		return submissionServiceMapper.mapSubmissionEntityToSubmission(submissionEntitySaved);
	}

	@Override
	public Submission update(Submission submission) {
		SubmissionEntity submissionEntity = submissionJpaRepository.findOne(submission.getId());
		submissionServiceMapper.mapSubmissionToSubmissionEntity(submission, submissionEntity);
		SubmissionEntity submissionEntitySaved = submissionJpaRepository.save(submissionEntity);
		return submissionServiceMapper.mapSubmissionEntityToSubmission(submissionEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		submissionJpaRepository.delete(id);
	}

	public SubmissionJpaRepository getSubmissionJpaRepository() {
		return submissionJpaRepository;
	}

	public void setSubmissionJpaRepository(SubmissionJpaRepository submissionJpaRepository) {
		this.submissionJpaRepository = submissionJpaRepository;
	}

	public SubmissionServiceMapper getSubmissionServiceMapper() {
		return submissionServiceMapper;
	}

	public void setSubmissionServiceMapper(SubmissionServiceMapper submissionServiceMapper) {
		this.submissionServiceMapper = submissionServiceMapper;
	}

}

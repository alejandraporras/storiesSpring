/*
 * Created on 14 Apr 2015 ( Time 18:45:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.stories.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.stories.bean.Usertable;
import org.stories.bean.jpa.UsertableEntity;
import java.util.List;
import org.stories.business.service.UsertableService;
import org.stories.business.service.mapping.UsertableServiceMapper;
import org.stories.data.repository.jpa.UsertableJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of UsertableService
 */
@Component
@Transactional
public class UsertableServiceImpl implements UsertableService {

	@Resource
	private UsertableJpaRepository usertableJpaRepository;

	@Resource
	private UsertableServiceMapper usertableServiceMapper;
	
	@Override
	public Usertable findById(String id) {
		UsertableEntity usertableEntity = usertableJpaRepository.findOne(id);
		return usertableServiceMapper.mapUsertableEntityToUsertable(usertableEntity);
	}

	@Override
	public List<Usertable> findAll() {
		Iterable<UsertableEntity> entities = usertableJpaRepository.findAll();
		List<Usertable> beans = new ArrayList<Usertable>();
		for(UsertableEntity usertableEntity : entities) {
			beans.add(usertableServiceMapper.mapUsertableEntityToUsertable(usertableEntity));
		}
		return beans;
	}

	@Override
	public Usertable save(Usertable usertable) {
		return update(usertable) ;
	}

	@Override
	public Usertable create(Usertable usertable) {
		UsertableEntity usertableEntity = usertableJpaRepository.findOne(usertable.getId());
		if( usertableEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		usertableEntity = new UsertableEntity();
		usertableServiceMapper.mapUsertableToUsertableEntity(usertable, usertableEntity);
		UsertableEntity usertableEntitySaved = usertableJpaRepository.save(usertableEntity);
		return usertableServiceMapper.mapUsertableEntityToUsertable(usertableEntitySaved);
	}

	@Override
	public Usertable update(Usertable usertable) {
		UsertableEntity usertableEntity = usertableJpaRepository.findOne(usertable.getId());
		usertableServiceMapper.mapUsertableToUsertableEntity(usertable, usertableEntity);
		UsertableEntity usertableEntitySaved = usertableJpaRepository.save(usertableEntity);
		return usertableServiceMapper.mapUsertableEntityToUsertable(usertableEntitySaved);
	}

	@Override
	public void delete(String id) {
		usertableJpaRepository.delete(id);
	}

	public UsertableJpaRepository getUsertableJpaRepository() {
		return usertableJpaRepository;
	}

	public void setUsertableJpaRepository(UsertableJpaRepository usertableJpaRepository) {
		this.usertableJpaRepository = usertableJpaRepository;
	}

	public UsertableServiceMapper getUsertableServiceMapper() {
		return usertableServiceMapper;
	}

	public void setUsertableServiceMapper(UsertableServiceMapper usertableServiceMapper) {
		this.usertableServiceMapper = usertableServiceMapper;
	}

}
